BAH Thierno Moussa

1- Cela fonctionne parce qu'il y a un constructeur par défaut sans paramètres.
   Les variables x et y sont toutes initialisées à 0.
 
2- Ici, ça ne fonctionne pas parce que les variables x et y qui sont privées ne sont visibles que dans la classe Point.
   Pour y remédier, il faut, soit:
    a- rendre ces variables publiques(déconseillé).
	b- créer des getters et des setters.
	
3- Il faut toujours que les champs d'une classe soient privés, c'est pour respecter le principe d'encapsulation.
   Ceci permettra de protèger des informations contre une modification inattendue.
   
4- Un accesseur est une méthode qui permet d'accéder en lecture ou en écriture(mutateur) à la valeur d'un attribut.
   On doit le faire dans la classe Point.
   
5- Le problème est du fait que l'appel du constructeur par défaut ne marche plus! On doit le déclarer explicitement si l'on veut encore l'utiliser.

6- Rien.

7- On crée une variable statique permettant d'incrémenter le nombre de points à chaque instanciation.

8- Le compilateur sait quel constructeur appeler en fonction du ou des paramètre(s) du constructeur.

Exercice 2. Egalité
1.5 affiche true
1.6 affiche false
    En effet, le signe(==) utilisé par les objets retourne true si et seulement les 2 objets ont même référence.
	
3.7
3.8 Le problème est du fait que les 2 objets (p1 et p2) occupent la même position dans la liste.

Exercice 4
4.5 Le problème est du fait que les 2 cercles(c et c2) ont un même point avec la même référence.
    Pour éviter ce problème, il faut affecter au centre du cercle en créant un nouvel objet de type Point.
4.9 Oui, on doit faire une méthode statique pour pouvoir faire la vérification à l'ensemble des points crées.
//Exercice 1. Graphiques D2
1.5 Cette méthode sera appelée chaque fois que le composant aura besoin d'être redessiné.
1.6 Le package java.awt contient les classes Container et FlowLayout tandis que javax.swing contient la classe JFrame.

//Exercice 5.
5.1 Ici, il est tout à fait normal de réutiliser la classe Circle dans la conception de celle d'anneau(Ring).
    D'où l'héritage.
5.4 Sans code suplémentaire, le problème est du fait que le rayon interne ne sera pas affiché.
    Ensuite, c'est la méthode toString() de la classe Circle qui sera utilisée par défaut.
    Pour le corriger, il faut rédefinir la méthode toString() dans la classe Ring.